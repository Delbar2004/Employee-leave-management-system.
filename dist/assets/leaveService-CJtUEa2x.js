import{h as r,i as p,k as d,Q as o}from"./index-uPpi8n1S.js";class l{async getMyLeaveRequests(){await new Promise(t=>setTimeout(t,500));const e=localStorage.getItem("user");if(!e)return[];const n=JSON.parse(e);return r.filter(t=>t.employeeId===n.id)}async getAllLeaveRequests(e){await new Promise(t=>setTimeout(t,700));let n=[...r];if(e){if(e.status&&(n=n.filter(t=>t.status===e.status)),e.leaveType&&(n=n.filter(t=>t.leaveType===e.leaveType)),e.department&&(n=n.filter(t=>t.department===e.department)),e.employeeId&&(n=n.filter(t=>t.employeeId===e.employeeId)),e.startDate){const t=new Date(e.startDate);n=n.filter(a=>new Date(a.startDate)>=t)}if(e.endDate){const t=new Date(e.endDate);n=n.filter(a=>new Date(a.endDate)<=t)}}return n.sort((t,a)=>new Date(a.appliedOn).getTime()-new Date(t.appliedOn).getTime())}async getLeaveTypes(){return await new Promise(e=>setTimeout(e,300)),p}async getMyLeaveBalances(){await new Promise(t=>setTimeout(t,400));const e=localStorage.getItem("user");if(!e)return[];const n=JSON.parse(e);return d.filter(t=>t.employeeId===n.id)}async applyForLeave(e){await new Promise(m=>setTimeout(m,1e3));const n=localStorage.getItem("user");if(!n)throw new Error("User not authenticated");const t=JSON.parse(n),a=new Date(e.startDate),c=new Date(e.endDate).getTime()-a.getTime(),u=Math.ceil(c/(1e3*60*60*24))+1,i={id:`leave-${Date.now()}`,employeeId:t.id,employeeName:t.name,department:t.department||"General",leaveType:e.leaveType,startDate:e.startDate,endDate:e.endDate,duration:u,reason:e.reason,status:"pending",appliedOn:new Date().toISOString()};return o.success("Leave request submitted successfully"),i}async cancelLeaveRequest(e){await new Promise(n=>setTimeout(n,800)),o.info("Leave request cancelled")}async reviewLeaveRequest(e,n,t){await new Promise(s=>setTimeout(s,800));const a=localStorage.getItem("user");if(!a)throw new Error("User not authenticated");JSON.parse(a),o.success(`Leave request ${n}`)}async getLeaveStatistics(e){return await new Promise(n=>setTimeout(n,600)),{approved:12,pending:3,rejected:2,total:17,byType:[{type:"Annual",count:8},{type:"Sick",count:5},{type:"Personal",count:2},{type:"Bereavement",count:1},{type:"Unpaid",count:1}],byMonth:[{month:"Jan",count:1},{month:"Feb",count:2},{month:"Mar",count:0},{month:"Apr",count:3},{month:"May",count:1},{month:"Jun",count:2},{month:"Jul",count:0},{month:"Aug",count:3},{month:"Sep",count:2},{month:"Oct",count:1},{month:"Nov",count:1},{month:"Dec",count:1}]}}}const v=new l;export{v as l};
